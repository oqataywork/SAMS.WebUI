
@using Kendo.Mvc.UI
@using SAMS.Model;

@{
    Layout = "~/Views/Shared/_Layout_partial.cshtml";
}


<script type="text/javascript">
    var postUrl = '@Url.Action("AssetTypes_Create_or_Update", "AssetTypes")';



    function onAssetTypegridChange(e) {
      var dataItem = this.dataItem(this.select());
        if(dataItem){
          var id = dataItem.AssetTypeID;
          $("#cat_id").val(id);
          if (document.getElementById("intSidepanel").style.width !== "" & document.getElementById("intSidepanel").style.width !== "0px" & document.getElementById("intSidepanel").style.width !== "0%")
             LoadReadForm(id);        
        }
    }

    function LoadReadForm(id){
          var element = $("#editForm");
          kendo.ui.progress(element, true);
          $("#editForm").load('@(Url.Action("GetAssetTypeReadForm", "AssetTypes", null, Request.Url.Scheme))?id=' + id, function () {
              kendo.ui.progress(element, false);
          });       
    }

    function LoaddefaultReadForm(){
      var id = $("#cat_id").val();
      LoadReadForm(id);
    }

    function getgridTooltip(e) {
        var dataItem = $("#AssetTypegrid").data("kendoGrid").dataItem(e.target.closest("tr"));
        var content = 'Created at: ' + kendo.toString(kendo.parseDate(dataItem.CreateDate), "dd.MM.yyyy HH:mm") + ' Changed at: ' + kendo.toString(kendo.parseDate(dataItem.CreateDate), "dd.MM.yyyy HH:mm") + '<br/>Changed by:' + dataItem.ChangedByFullName;
        return content;
    }

function FunAssetTypeID() {
        var _selId = $("#cat_id").val();
        return {
            assettypeid: _selId
        };
    }

    function AssetTypegriderror_error(e) {
        if (e.errors) {
            var message = "There are some errors:\n";
            // Create a message containing all errors.
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message.
            alert(message);
            // Cancel the changes.
            var grid = $("#AssetTypegrid").data("kendoGrid");
            grid.cancelChanges();
        }
    }

    function openRight() {
        document.getElementById("intmainbodydiv").style.width = "60%";
        document.getElementById("intSidepanel").style.width = "40%";
        document.getElementById("intSidepanel").style.display = "block";
    }

    function closeRight() {
        document.getElementById("intmainbodydiv").style.width = "100%";
        document.getElementById("intSidepanel").style.width = "0%";
        document.getElementById("intSidepanel").style.display = "none";
    }
    function toggleRight() {
        if (document.getElementById("intSidepanel").style.width === "" | document.getElementById("intSidepanel").style.width === "0px" | document.getElementById("intSidepanel").style.width === "0%")
            openRight();
        else
            closeRight();
    }
    function AddAssetTypegridrow() {
          var element = $("#editForm");
          kendo.ui.progress(element, true);
        $("#editForm").load('@(Url.Action("GetAssetTypeNewForm", "AssetTypes", null, Request.Url.Scheme))', function () {
            openRight();
            SetAssetTypegrid_edit(true);
            kendo.ui.progress(element, false);
        });
    }

    function SetAssetTypegrid_edit(arg) {

        if (arg === true) {
            openRight();
            $("#AssetTypegrid_edit_button").hide();
            $("#AssetTypegrid_delete_button").hide();
            $("#charcat_pdf").hide();
            $("#charcat_excel").hide();
            $("#AssetTypegrid_add_button").hide();
            $("#AssetTypegrid_cancel_button").show();
            $("#AssetTypegrid_update_button").show();
            $(".k-grid-content", $("#AssetTypegrid")).addClass("k-state-disabled");

        }
        else {
            $("#AssetTypegrid_edit_button").show();
            $("#AssetTypegrid_delete_button").show();
            $("#charcat_pdf").show();
            $("#charcat_excel").show();
            $("#AssetTypegrid_add_button").show();
            $("#AssetTypegrid_cancel_button").hide();
            $("#AssetTypegrid_update_button").hide();
            $(".k-grid-content", $("#AssetTypegrid")).removeClass("k-state-disabled");
        }
    }

    $(document).ready(function () {

        closeRight();
        $("#AssetTypegrid_edit_button").on("click", function (e) {
            e.preventDefault();
            var grid = $("#AssetTypegrid").getKendoGrid();
            var selectedrow = grid.select()[0];
            if (selectedrow) {
                var element = $("#editForm");
                kendo.ui.progress(element, true);
                var dataItem = grid.dataItem(selectedrow);
                var id = dataItem.AssetTypeID;
                $("#editForm").load('@(Url.Action("GetAssetTypeEditForm", "AssetTypes", null, Request.Url.Scheme))?id=' + id, function () {
                    SetAssetTypegrid_edit(true);
                    kendo.ui.progress(element, false);
                });

            }
        });

        $("#AssetTypegrid_add_button").on("click", function () {
            AddAssetTypegridrow();
        });

        $("#AssetTypegrid_delete_button").on("click", function () {
            grid = $("#AssetTypegrid").data("kendoGrid");
            var sel = $("#AssetTypegrid").data("kendoGrid").select();
            grid.removeRow(sel);
            SetAssetTypegrid_edit(false);
        });

        $("#AssetTypegrid_update_button").on("click", function (e) {
            //e.preventDefault();

            var validator = $("#modForm").validate({
                highlight: function (element) {
                    if (element.type == 'select' || element.type == 'select-one') {
                        $(element).parent().parent().addClass('has-error');
                    }
                    else {
                        $(element).parent().addClass('has-error');
                    }
                },
                unhighlight: function (element) {
                    if (element.type == 'select' || element.type == 'select-one') {
                        $(element).parent().parent().removeClass('has-error');
                    }
                    else {
                        $(element).parent().removeClass('has-error');
                    }
                },
                errorPlacement: function (error, element) {
                    if (element[0].type == 'select' || element[0].type == 'select-one') {
                        error.appendTo(element.parent().parent('div'));
                    }
                    else {
                        error.appendTo(element.parent('div'));
                    }
                },
                rules: {

                    AssetTypeName: {
                        required: true
                    }

                    ,AssetCategoryID: {
                        required: true
                    }

                    ,ScheduleTypeID: {
                        required: true
                    }
                },
                messages: {

                    AssetTypeName: {
                        required: "AssetTypeName vacib xanadır zəhmət olmasa doldurun !"
                    }

                    ,AssetCategoryID: {
                        required: "AssetCategoryID vacib xanadır zəhmət olmasa doldurun !"
                    }

                    ,ScheduleTypeID: {
                        required: "ScheduleTypeID vacib xanadır zəhmət olmasa doldurun !"
                    }
                },
                submitHandler: function (form) {
                    kendo.ui.progress($(document.body), true);
                    var data = $('#modForm').serialize();
                    $.ajax({
                        type: "POST",
                        url: postUrl,
                        data: data,
                        beforeSend: function () {

                        },
                        success: function (res) {
                            kendo.ui.progress($(document.body), false);
                            if (res.Errors) {
                                Swal.fire({ icon: 'error', text: res.Errors.exception.errors, showConfirmButton: true });
                            }
                            else {
                                Swal.fire({ icon: 'success', text: "Əməliyyat uğurla tamamlandı.", showConfirmButton: false, timer: 1500 });
                                $("#AssetTypegrid").data("kendoGrid").dataSource.read();
                                SetAssetTypegrid_edit(false);
                                LoaddefaultReadForm();
                            }
                        },
                        error: function (error) {
                            kendo.ui.progress($(document.body), false);
                            $('#monitorForm').find("input, select, textarea, button").prop("disabled", false);
                            Swal.fire({ type: 'error', text: "Xəta baş verdi. Zəhmət olmasa, səhifəni yeniləyin.", showConfirmButton: true, confirmButtonText: 'Bağla', allowOutsideClick: false });
                        }
                    });
                }
            });
            $("#modForm").submit();
        });

        $("#AssetTypegrid_cancel_button").on("click", function () {
            $("#AssetTypegrid").data("kendoGrid").cancelChanges();
            SetAssetTypegrid_edit(false);
            LoaddefaultReadForm();
        })
        SetAssetTypegrid_edit(false);

//$(".k-grid-content").dblclick(function () {
        //    debugger;
        //    toggleRight();
        //});

//test
        $("#AssetTypegrid tbody").on("dblclick", "td", function (e) {
            toggleRight();
            var cellElement = this;
            var cell = $(cellElement);
            var uid=cell.closest('tr').attr('data-uid')
            var grid = $("#AssetTypegrid").data("kendoGrid");
            var row = grid.table.find("[data-uid=" + uid + "]");
            var id = grid.dataItem(row).AssetTypeID;
            $("#cat_id").val(id);
            if (document.getElementById("intSidepanel").style.width != "" & document.getElementById("intSidepanel").style.width != "0px" & document.getElementById("intSidepanel").style.width != "0%")
                LoadReadForm(id);
        });

        $("#AssetTypegrid").kendoTooltip({
            filter: "th", // Select the th elements of the Grid.
            position: "top",
            width: 250,
            content: function (e) {
                // Return the text content of the hovered header.
                return e.target.text();
            }
        }).data("kendoTooltip");
    });


</script>

<body >
    <input type="hidden" name="cat_id" id="cat_id" />
        @{
            int AssetTypePermission = (int)ViewData["AssetTypePermission"];
        }
    <table>
        <tr>
            <td id="lefttd" >
                <div id="intmainbodydiv" class="partialpanel" style="width: 100%; position: initial;">
                    @(Html.Kendo().Grid<AssetTypeModel>()
                        .Name("AssetTypegrid")
                          .ToolBar(toolbar =>
                          {
                          toolbar.Template(@<text>
                                                <div class="toolbar">
                                                    @if (AssetTypePermission >2){
                                                     <div id="AssetTypegrid_add_button" class="k-button-icontext  circleButton">
                                                        <a href="#">
                                                            <span class="inner"></span>
                                                            <i class='far fa-plus-square' style='font-size:18px'></i>
                                                        </a>
                                                    </div>
                                                    }
                                                    @if (AssetTypePermission >3){
                                                    <div id="AssetTypegrid_edit_button" class="k-button-icontext  circleButton">
                                                        <a href="#">
                                                            <span class="inner"></span>
                                                            <i class='far fa-edit' style='font-size:18px'></i>
                                                        </a>
                                                    </div>
                                                    }
                                                    @if (AssetTypePermission ==5){
                                                    <div id="AssetTypegrid_delete_button" class="k-button-icontext k-grid-delete circleButton">
                                                        <a href="#">
                                                            <span class="inner"></span>
                                                            <i class='far fa-trash-alt' style='font-size:18px'></i>
                                                        </a>
                                                    </div>
                                                    }
                                                    <div id="AssetTypegrid_update_button" class="k-button-icontext k-grid-update circleButton" type="submit">
                                                        <a href="#">
                                                            <span class="inner"></span>
                                                            <i class='far fa-check-circle' style='font-size:18px'></i>
                                                        </a>
                                                    </div>
                                                    <div id="AssetTypegrid_cancel_button" class="k-button-icontext k-grid-cancel circleButton">
                                                        <a href="#">
                                                            <span class="inner"></span>
                                                            <i class='far fa-times-circle' style='font-size:18px'></i>
                                                        </a>
                                                    </div>
                                                </div>
                                            </text>);
                          })
                        .Columns(columns =>
                        {
				columns.Bound(p => p.AssetTypeName).Title("Тип актива");
				columns.Bound(p => p.AssetCategoryName).Title("Category");
				columns.Bound(p => p.Deactivate).ClientTemplate("<input disabled type= 'checkbox' #= Deactivate ? checked='checked' :'' # />").EditorTemplateName("<input type= 'checkbox' #= Deactivate ? checked='checked' :'' # />");
				columns.Bound(p => p.SingleInstance).ClientTemplate("<input disabled type= 'checkbox' #= SingleInstance ? checked='checked' :'' # />").EditorTemplateName("<input type= 'checkbox' #= SingleInstance ? checked='checked' :'' # />");
				columns.Bound(p => p.CreateDate).Title("Created at").Format("{0:dd.MM.yyyy}");
				columns.Bound(p => p.ChangeDate).Title("Changed at").Format("{0:dd.MM.yyyy}");
				columns.Bound(p => p.ScheduleTypeName);
				columns.Bound(p => p.ChangedByFullName).Title("Changed by");
                          columns.Bound(p => p.AssetTypeID).ClientTemplate(@"<div class='columnicon' style='background-image: url(" + @Url.Content("~/Images/info.jpg") + ");'></div>").Title("Change Info").Width(50);
                        })
                        .Editable(editable => editable.Mode(GridEditMode.PopUp))
                        .Groupable()
                        .Resizable(resize => resize.Columns(true))
                        .Selectable(selectable =>
                        {
                            selectable.Mode(GridSelectionMode.Single);
                            selectable.Type(GridSelectionType.Row);
                        })
                        .Sortable(sortable =>
                        {
                            sortable.SortMode(GridSortMode.SingleColumn);
                        })
                        .Navigatable()
                        .Filterable()
                        
                        .Scrollable(scr => scr.Height(600))

                        .Events(ev => ev
                            .Change("onAssetTypegridChange")
                        )
                        .DataSource(dataSource => dataSource
                        .Ajax()
                        .ServerOperation(false)
                            .Events(events => events
                                .Error("AssetTypegriderror_error")
                            )
                        .Read(ac => ac.Action("AssetTypes_Read", "AssetTypes"))
                        .Create(ac => ac.Action("AssetTypes_Create", "AssetTypes"))
                        .Update(ac => ac.Action("AssetTypes_Update", "AssetTypes"))
                        .Destroy(ac => ac.Action("AssetTypes_Destroy", "AssetTypes"))
                        .Model(model =>
                        {
				model.Id(p => p.AssetTypeID); model.Field(p => p.AssetTypeID).Editable(false);
				model.Field(p => p.AssetTypeName);
				model.Field(p => p.AssetCategoryID);
				model.Field(p => p.ScheduleTypeID);
				model.Field(p => p.Deactivate);
				model.Field(p => p.SingleInstance);
				model.Field(p => p.CreateDate).Editable(false);
				model.Field(p => p.ChangeDate).Editable(false);
				model.Field(p => p.ChangedBy);
				model.Field(p => p.ChangedByFullName).Editable(false);
				model.Field(p => p.AssetCategoryName).Editable(false);
				model.Field(p => p.ScheduleTypeName).Editable(false);
                        })
                        )
                        )
@(Html.Kendo().Tooltip()
    .For("#AssetTypegrid")
    .Filter("td:nth-child(9)")
    //.ContentTemplateId("tooltiptemplate")
    .ContentHandler("getgridTooltip")
    .Position(TooltipPosition.Top)
    .Width(250)
    .Height(100)
)

    </div>
            </td>

            <td id="righttd" >
                <div id="intSidepanel" class="intsidebar" >
                    <div id="editForm" >
                    @{Html.RenderPartial("AssetTypeReadFormPartial");}
                </div>
                </div>
            </td>
        </tr>
    </table>

</body>
